########################################
#                                      #
# FILE UNDER ANSIBLE CONFIG MANAGEMENT #
#                                      #
#        keep hands away               #
#                                      #
########################################

#
# The MySQL database server configuration file.
#
# You can copy this to one of:
# - "/etc/mysql/my.cnf" to set global options,
# - "~/.my.cnf" to set user-specific options.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# This will be passed to all mysql clients
# It has been reported that passwords should be enclosed with ticks/quotes
# escpecially if they contain "#" chars...
# Remember to edit /etc/mysql/debian.cnf when changing the socket location.
[client]
port		= 3306
socket	= /var/run/mysqld/mysqld.sock

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

# This was formally known as [safe_mysqld]. Both versions are currently parsed.
[mysqld_safe]
socket	= /var/run/mysqld/mysqld.sock
nice		= 0
open_files_limit = {{ mariadb_open_files_limit }}

[mysqld]
#
# * Basic Settings
#

#
# * IMPORTANT
#   If you make changes to these settings and your system uses apparmor, you may
#   also need to also adjust /etc/apparmor.d/usr.sbin.mysqld.
#

user		  = mysql
socket		= /var/run/mysqld/mysqld.sock
port		  = {{ mariadb_port }}
basedir		= /usr
datadir		= {{ mariadb_data_dir }}
tmpdir		= {{ mariadb_tmp_dir }}
skip-external-locking
skip-name-resolve

#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
{% if mariadb_bind_interface %}
bind-address    = {{ hostvars[inventory_hostname]['ansible_' + mariadb_bind_interface].ipv4.address }}
{% else %}
bind-address    = {{ mariadb_bind_address }}
{% endif %}
#
# * Fine Tuning
#
{% if mariadb_version is version("10.1", "<=") %}
{%   if mariadb_key_buffer == "auto" %}
# key_buffer has been automatically set to 20% of total RAM
key_buffer         = {{ (ansible_memtotal_mb * 1024 * 1024 * 0.2) | int}}
{%   else %}
key_buffer         = {{ mariadb_key_buffer }}
{%   endif %}{% else %}
{%   if mariadb_key_buffer == "auto" %}
# key_buffer_size has been automatically set to 20% of total RAM
key_buffer_size	   = {{ (ansible_memtotal_mb * 1024 * 1024 * 0.2) | int}}
{%   else %}
key_buffer_size	   = {{ mariadb_key_buffer }}
{%   endif %}
{% endif %}

max_allowed_packet = "{{ mariadb_max_allowed_packet }}"
thread_stack       = 192K
thread_cache_size  = {{ mariadb_thread_cache_size }}

# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched. Recovery can be configured as so (available
# options my vary depending on configuration):
#   OFF: No recovery.
#   BACKUP: If the data file is changed while recovering, saves a backup of 
#     the .MYD data file. t.MYD will be saved as t.MYD-datetime.BAK.
#   BACKUP_ALL: Same as BACKUP but also backs up the .MYI index file. t.MYI 
#     will be saved as t.MYI-datetime.BAK.
#   DEFAULT: Recovers without backing up, forcing, or quick checking.
#   FORCE: Runs the recovery even if it determines that more than one row from
#     the data file will be lost.
#   QUICK: Does not check rows in the table if there are no delete blocks.
{% if mariadb_version is version("10.1", "<=") %}
myisam-recover         = BACKUP
{% else %}
myisam_recover_options = BACKUP
{% endif %}
max_connections        = {{ mariadb_max_connections }}

{% if mariadb_sql_mode is defined %}
sql_mode='{{ mariadb_sql_mode }}'
{% endif %}

{% if mariadb_character_set_server is defined %}
character-set-server  = {{ mariadb_character_set_server }}
{% endif %}

{% if mariadb_collation_server is defined %}
collation-server      = {{ mariadb_collation_server }}
{% endif %}

default-storage-engine={{ mariadb_default_storage_engine }}

#table_cache            = 64
#thread_concurrency     = 10
#
# * Query Cache Configuration
#
query_cache_limit = {{ mariadb_query_cache_limit }}
query_cache_size  = {{ mariadb_query_cache_size }}
query_cache_strip_comments = {{ mariadb_query_cache_strip_comments }}
query_cache_type  = {{ mariadb_query_cache_type }}
#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
# Be aware that this log type is a performance killer.
# As of 5.1 you can enable the log at runtime!
general_log_file        = /var/log/mysql/{{ inventory_hostname }}_mysql.log
#general_log             = 1

log_error                = /var/log/mysql/error.log

# Here you can see queries with especially long duration
#log_slow_queries	= /var/log/mysql/mysql-slow.log
#long_query_time = 2
#log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication node, see README.Debian about
#       other settings you may need to change.
#server-id		= 1
#log_bin			= /var/log/mysql/mysql-bin.log
expire_logs_days  = {{ mariadb_expire_logs_days }}
max_binlog_size   = {{ mariadb_max_binlog_size }}

#binlog_do_db		= include_database_name
#binlog_ignore_db	= include_database_name

{% if mariadb_replicas_group and inventory_hostname in groups[mariadb_replicas_group] %}
server-id = {{ mariadb_server_id }}
read-only = 1
{%   if mariadb_replicas_as_masters %}
# replicas can act as masters
{%     if mariadb_binlog_dir != mariadb_data_dir %}
log-bin       = {{ mariadb_binlog_dir }}/replica-master-bin
log-bin-index = {{ mariadb_binlog_dir }}/replica-master-bin.index
{%     else %}
log-bin       = replica-master-bin
log-bin-index = replica-master-bin.index
{%     endif %}
log-slave-updates = 1
{%   endif %}

relay-log = {{ inventory_hostname }}-replica-relay-bin
relay-log-index = {{ inventory_hostname }}-replica-relay-bin.index
{% elif mariadb_master_host is defined and mariadb_master_host == inventory_hostname %}
server-id     = 1
{%   if mariadb_binlog_dir != mariadb_data_dir %}
log-bin       = {{ mariadb_binlog_dir }}/master-bin
log-bin-index = {{ mariadb_binlog_dir }}/master-bin.index
{%   else %}
log-bin       = master-bin
log-bin-index = master-bin.index
{%   endif %}
{% else %}
# Single host mode configured
{% endif %}

# * InnoDB
#
# InnoDB is enabled by default with a 10MB datafile in /var/lib/mysql/.
# Read the manual for more InnoDB related options. There are many!
#
# * Security Features
#
# Read the manual, too, if you want chroot!
# chroot = /var/lib/mysql/
#
# For generating SSL certificates I recommend the OpenSSL GUI "tinyca".
#
# ssl-ca=/etc/mysql/cacert.pem
# ssl-cert=/etc/mysql/server-cert.pem
# ssl-key=/etc/mysql/server-key.pem

tmp_table_size      = {{ mariadb_tmp_table_size }}
max_heap_table_size = {{ mariadb_max_heap_table_size }}

[mysqldump]
quick
quote-names
max_allowed_packet	= 16M

[mysql]
#no-auto-rehash	# faster start of mysql but no tab completition

[isamchk]
{% if mariadb_key_buffer == "auto" %}
# key_buffer has been automatically set to 20% of total RAM
key_buffer		= {{ (ansible_memtotal_mb * 1024 * 1024 * 0.2) | int}}
{% else %}
key_buffer		= {{ mariadb_key_buffer }}
{% endif %}

#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#
!includedir /etc/mysql/conf.d/
