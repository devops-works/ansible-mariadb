#!/bin/bash

#!/usr/bin/env bash
#
# {{ ansible_managed }}
#

# How many backups to keep
KEEP={{ mariadb_backup_keep }}
DEST="{{ mariadb_backup_destination }}"
PASS="{{ mariadb_root_password }}"

EXCLUDE="{{ mariadb_backup_exclude }}"

GPG_RCPT={% for entry in mariadb_backup_gpg_keys %}--recipient {{ entry.id }} {% endfor %}

DB=$(echo "SHOW DATABASES;" | mysql --password="${PASS}" | tail -n +2 | grep -v information_schema | grep -v performance_schema | grep -v "${EXCLUDE}")
for j in "${DB}"; do
  [[ $1 == '-v' ]] && echo -n "Backuping ${j}..." 
  DATE=$(date +%Y%m%d_%H%M%S)
  mysqldump --password="${PASS}" ---routines --triggers --single-transaction "${j}" 2> /tmp/error | zstd > "${DEST}/$j-${DATE}.sql.zst"
  if [ $? != 0 ]; then
    echo "Error backuping (mysqldump) ${j} :"
    cat /tmp/error
    echo
  else
    [[ $1 == '-v' ]] && echo done
  fi

  # Encrypt backups
  if [ {{ mariadb_backup_gpg_keys | length }} -gt 0 ]; then
    # Encrypt
    gpg --encrypt ${GPG_RCPT} "${DEST}/$j-${DATE}.sql.zst"

    # Remove old encrypted backups
    COUNT=$(( `ls "${DEST}/${j}-*.zst.gpg" | wc -l` - ${KEEP} ))
    if [ ${COUNT} -gt 0 ]; then
      [[ $1 == '-v' ]] && echo "Erasing ${COUNT} old encrypted backups (mysqldump+gpg) for $j"
      for i in $(ls "${DEST}/${j}-*.zst.gpg" | head -${COUNT}); do
        rm $i
      done
    fi
  fi

  # remove older backups for mysqldump
  COUNT=$(( `ls  "${DEST}/${j}-*.zst" | wc -l` - ${KEEP} ))
  if [ ${COUNT} -gt 0 ]; then
    [[ $1 == '-v' ]] && echo "Erasing ${COUNT} old backups (mysqldump) for $j"
    for i in $(ls "${DEST}/${j}-*.zst" | head -$COUNT); do
      rm $i
    done
  fi

  PATTERN="*.gpg"
  # Only copy encrypted backups if we encrypt them
  if [ {{ mariadb_backup_gpg_keys | length }} -gt 0 ]; then
    PATTERN="*.gpg"
  fi

  if [ -n "{{ mariadb_backup_s3bucket }}" ]; then
    s3cmd sync --delete-removed ${DEST}/${PATTERN} s3://{{ mariadb_backup_s3bucket }}/
  fi

  if [ -n "{{ mariadb_backup_gcloudbucket }}" ]; then
    gsutil -m rsync -r ${DEST}/${PATTERN} gs://{{ mariadb_backup_gcloudbucket }}/$(hostname)/
  fi
done
