#!/usr/bin/env bash

#
# {{ ansible_managed }}
#

# How many backups to keep
KEEP={{ mariadb_backup_keep }}

DEST="{{ mariadb_backup_destination }}"
DEST_ENCRYPTED="{{ mariadb_backup_destination }}/gpg"

PASS="{{ mariadb_root_password }}"

EXCLUDE="{{ mariadb_backup_exclude }}"

GPG_RCPT="{% for entry in mariadb_backup_gpg_keys %}--recipient {{ entry.id }} {% endfor %}"

DB=$(echo "SHOW DATABASES;" | mysql --password="${PASS}" | tail -n +2 | grep -v '^information_schema$' | grep -v '^performance_schema$' | grep -v '^sys$' | grep -v "${EXCLUDE}")

errors=0

for j in ${DB}; do
  [[ $1 == '-v' ]] && echo -n "Database ${j}...backup..." 
  DATE=$(date +%Y%m%d_%H%M%S)
  mysqldump --password="${PASS}" --routines --triggers --single-transaction {{ mariadb_backup_additional_flag }} "${j}" 2> /tmp/error | zstd > "${DEST}/$j-${DATE}.sql.zst"
  if [ $? != 0 ]; then
    echo "Error backuping (mysqldump) ${j} :"
    cat /tmp/error
    echo
    errors=$((errors + 1))
  fi

  # Encrypt backups
  if [ {{ mariadb_backup_gpg_keys | length }} -gt 0 ]; then
    # Encrypt
    [[ $1 == '-v' ]] && echo -n "encrypting..." 
    gpg --encrypt ${GPG_RCPT} --trust-model always "${DEST}/$j-${DATE}.sql.zst" || errors=$((errors + 1)) 
    mv "${DEST}/$j-${DATE}.sql.zst.gpg" ${DEST_ENCRYPTED}/ || errors=$((errors + 1)) 
    # Remove old encrypted backups
    # COUNT=$(( $(ls ${DEST_ENCRYPTED}/${j}-*.zst.gpg | wc -l) - ${KEEP} ))
    COUNT=$(( `ls $DEST_ENCRYPTED/$j-*.gpg | wc -l` - $KEEP ))
    if [ ${COUNT} -gt 0 ]; then
      [[ $1 == '-v' ]] && echo -n "purging ${COUNT} encrypted..."
      for i in `ls $DEST_ENCRYPTED/$j-*.gpg | head -$COUNT`; do
        rm $i
      done
    fi
  fi

  # remove older backups for mysqldump
  # COUNT=$(( $(ls ${DEST}/${j}-*.zst | wc -l) - ${KEEP} ))
  COUNT=$(( `ls $DEST/$j-*.zst | wc -l` - $KEEP ))
  if [ ${COUNT} -gt 0 ]; then
      [[ $1 == '-v' ]] && echo -n "purging ${COUNT} clear..."
    for i in `ls $DEST/$j-*.zst | head -$COUNT`; do
      rm $i
    done
  fi

  [[ $1 == '-v' ]] && echo "done"
done

SOURCE="${DEST}"
# Only copy encrypted backups if we encrypt them
if [ {{ mariadb_backup_gpg_keys | length }} -gt 0 ]; then
  SOURCE="${DEST_ENCRYPTED}"
fi

if [ -n "{{ mariadb_backup_s3bucket }}" ]; then
  [[ $1 == '-v' ]] && echo -n "syncing to s3://{{ mariadb_backup_s3bucket }}..."
  s3cmd sync ${SOURCE} s3://{{ mariadb_backup_s3bucket }}/
  if [ $? -gt 0 ]; then
    echo -n "error syncing ${SOURCE} to s3://{{ mariadb_backup_s3bucket }}/"
    exit 1
  fi
  [[ $1 == '-v' ]] && echo "done"
fi

if [ -n "{{ mariadb_backup_gcloudbucket }}" ]; then
  [[ $1 == '-v' ]] && echo -n "syncing to gs://{{ mariadb_backup_gcloudbucket }}..."
  gsutil -m rsync -r ${SOURCE} gs://{{ mariadb_backup_gcloudbucket }}/$(hostname)/
  if [ $? -gt 0 ]; then
    echo -n "error syncing ${SOURCE} to gs://{{ mariadb_backup_gcloudbucket }}"
    exit 1
  fi
  [[ $1 == '-v' ]] && echo "done"
fi

if [ $errors -gt 0 ]; then
  echo "$errors errors occured"
  exit 1
fi

exit 0
